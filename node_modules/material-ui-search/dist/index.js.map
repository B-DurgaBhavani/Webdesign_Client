{"version":3,"file":"index.js","sources":["../src/SearchBar.js","../src/types.js","../src/actions.js","../src/SearchbarProvider.js","../src/withSearchbar.js","../src/reducer.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport Paper from '@material-ui/core/Paper'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { grey } from '@material-ui/core/colors'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport classNames from 'classnames'\n\nconst styles = {\n    root: {\n        height: 48,\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    iconButton: {\n        opacity: 0.54,\n        transform: 'scale(1, 1)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n    },\n    iconButtonHidden: {\n        transform: 'scale(0, 0)',\n        '& > $icon': {\n            opacity: 0\n        }\n    },\n    iconButtonDisabled: {\n        opacity: 0.38\n    },\n    searchIconButton: {\n        marginRight: -48\n    },\n    icon: {\n        opacity: 0.54,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)'\n    },\n    input: {\n        width: '100%'\n    },\n    searchContainer: {\n        margin: 'auto 16px',\n        width: 'calc(100% - 48px - 32px)' // 48px button + 32px margin\n    }\n}\n\n/**\n * Material design search bar\n * @see [Search patterns](https://material.io/guidelines/patterns/search.html)\n */\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            focus: false,\n            value: this.props.value,\n            active: false\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.value !== nextProps.value) {\n            this.setState({ ...this.state, value: nextProps.value })\n        }\n    }\n\n    handleFocus = (e) => {\n        this.setState({ focus: true })\n        if (this.props.onFocus) {\n            this.props.onFocus(e)\n        }\n    }\n\n    handleBlur = (e) => {\n        this.setState({ focus: false })\n        if (this.state.value.trim().length === 0) {\n            this.setState({ value: '' })\n        }\n        if (this.props.onBlur) {\n            this.props.onBlur(e)\n        }\n    }\n\n    handleInput = (e) => {\n        this.setState({ value: e.target.value })\n        if (this.props.onChange) {\n            this.props.onChange(e.target.value)\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({ active: false, value: '' })\n        if (this.props.onCancelSearch) {\n            this.props.onCancelSearch()\n        }\n    }\n\n    handleKeyUp = (e) => {\n        if (e.charCode === 13 || e.key === 'Enter') {\n            this.handleRequestSearch()\n        } else if (this.props.cancelOnEscape && (e.charCode === 27 || e.key === 'Escape')) {\n            this.handleCancel()\n        }\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp(e)\n        }\n    }\n\n    handleRequestSearch = () => {\n        if (this.props.onRequestSearch) {\n            this.props.onRequestSearch(this.state.value)\n        }\n    }\n\n    render() {\n        const { value } = this.state\n        const {\n            cancelOnEscape,\n            className,\n            classes,\n            closeIcon,\n            disabled,\n            onCancelSearch,\n            onRequestSearch,\n            searchIcon,\n            style,\n            ...inputProps\n        } = this.props\n\n        return (\n            <Paper\n                className={classNames(classes.root, className)}\n                style={style}\n            >\n                <div className={classes.searchContainer}>\n                    <Input\n                        {...inputProps}\n                        onBlur={this.handleBlur}\n                        value={value}\n                        onChange={this.handleInput}\n                        onKeyUp={this.handleKeyUp}\n                        onFocus={this.handleFocus}\n                        fullWidth\n                        className={classes.input}\n                        disableUnderline\n                        disabled={disabled}\n                    />\n                </div>\n                <IconButton\n                    onClick={this.handleRequestSearch}\n                    classes={{\n                        root: classNames(classes.iconButton, classes.searchIconButton, {\n                            [classes.iconButtonHidden]: value !== ''\n                        }),\n                        disabled: classes.iconButtonDisabled\n                    }}\n                    disabled={disabled}\n                >\n                    {React.cloneElement(searchIcon, {\n                        classes: { root: classes.icon }\n                    })}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleCancel}\n                    classes={{\n                        root: classNames(classes.iconButton, {\n                            [classes.iconButtonHidden]: value === ''\n                        }),\n                        disabled: classes.iconButtonDisabled\n                    }}\n                    disabled={disabled}\n                >\n                    {React.cloneElement(closeIcon, {\n                        classes: { root: classes.icon }\n                    })}\n                </IconButton>\n            </Paper>\n        )\n    }\n}\n\nSearchBar.defaultProps = {\n    className: '',\n    closeIcon: <ClearIcon style={{ color: grey[500] }} />,\n    disabled: false,\n    placeholder: 'Search',\n    searchIcon: <SearchIcon style={{ color: grey[500] }} />,\n    style: null,\n    value: ''\n}\n\nSearchBar.propTypes = {\n    /** Whether to clear search on escape */\n    cancelOnEscape: PropTypes.bool,\n    /** Override or extend the styles applied to the component. */\n    classes: PropTypes.object.isRequired,\n    /** Custom top-level class */\n    className: PropTypes.string,\n    /** Override the close icon. */\n    closeIcon: PropTypes.node,\n    /** Disables text field. */\n    disabled: PropTypes.bool,\n    /** Fired when the search is cancelled. */\n    onCancelSearch: PropTypes.func,\n    /** Fired when the text value changes. */\n    onChange: PropTypes.func,\n    /** Fired when the search icon is clicked. */\n    onRequestSearch: PropTypes.func,\n    /** Sets placeholder text for the embedded text field. */\n    placeholder: PropTypes.string,\n    /** Override the search icon. */\n    searchIcon: PropTypes.node,\n    /** Override the inline-styles of the root element. */\n    style: PropTypes.object,\n    /** The value of the text field. */\n    value: PropTypes.string\n}\n\nexport default withStyles(styles)(SearchBar)","export const SEARCH = '@@searchbar/SEARCH'\nexport const CLEAR = '@@searchbar/CLEAR'","import { SEARCH, CLEAR } from './types'\n\nconst search = (payload) => ({\n    type: SEARCH,\n    payload\n})\n\nconst clear = (payload) => ({\n    type: CLEAR,\n    payload\n})\n\nexport default { search, clear }","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport actions from './actions'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing(0.5),\n    }\n});\n\n\nclass SearchbarProvider extends PureComponent {\n    constructor() {\n        super()\n        this.state = {\n            searchQuery: null,\n        }\n    }\n\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.searchbar !== prevProps.searchbar) {\n            if (this.props.searchbar) {\n                this.processQueue()\n            }\n        }\n    }\n\n    processQueue = () => {\n        if (this.props.searchbar) {\n            this.setState({ searchQuery: this.props.searchbar.options })\n            this.props.clear(this.props.searchbar.id)\n        }\n    }\n\n    static childContextTypes = {\n        searchbar: PropTypes.object,\n        searchQuery: PropTypes.string,\n    }\n\n    static propTypes = {\n        children: PropTypes.node,\n        SearchbarProps: PropTypes.object\n    }\n\n    getChildContext() {\n        return {\n            searchbar: {\n                search: this.props.search,\n                searchQuery: this.state.searchQuery\n            }\n        }\n    }\n\n    render() {\n        const { children } = this.props\n        return (\n            <React.Fragment>\n                {children}\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nSearchbarProvider = withStyles(styles)(SearchbarProvider);\n\nexport default connect(\n    state => ({\n        searchbar: state.searchbar.queue[0] || null\n    }),\n    dispatch => ({\n        search: (options) => dispatch(actions.search({ options })),\n        clear: (id) => dispatch(actions.clear({ id }))\n    })\n)(SearchbarProvider)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction withSearchbar() {\n    return (Component) => {\n        const ComponentWithSearchbar = (props, { searchbar }) => (\n            <Component\n                searchbar={searchbar}\n                {...props}\n            />\n        )\n\n        ComponentWithSearchbar.contextTypes = {\n            searchbar: PropTypes.object.isRequired\n        }\n\n        return ComponentWithSearchbar\n    }\n}\n\nexport default withSearchbar","import { SEARCH, CLEAR } from './types'\n\nconst initialState = {\n    queue: []\n}\n\nexport default (state = initialState, { type, payload } = {}) => {\n    switch (type) {\n        case SEARCH:\n            return { queue: [...state.queue, { id: Date.now(), ...payload }] }\n        case CLEAR:\n            return { queue: state.queue.filter((searchbar) => searchbar.id !== payload.id) }\n        default:\n            return state\n    }\n}"],"names":["styles","SearchBar","props","handleFocus","e","setState","focus","onFocus","handleBlur","state","value","trim","length","onBlur","handleInput","target","onChange","handleCancel","active","onCancelSearch","handleKeyUp","charCode","key","handleRequestSearch","cancelOnEscape","onKeyUp","onRequestSearch","nextProps","className","classes","closeIcon","disabled","searchIcon","style","inputProps","React","classNames","root","searchContainer","input","iconButton","searchIconButton","iconButtonHidden","iconButtonDisabled","cloneElement","icon","Component","defaultProps","color","grey","propTypes","PropTypes","bool","object","isRequired","string","node","func","withStyles","SEARCH","CLEAR","search","payload","clear","theme","spacing","SearchbarProvider","processQueue","searchbar","searchQuery","options","id","prevProps","prevState","children","PureComponent","childContextTypes","connect","queue","dispatch","actions","withSearchbar","ComponentWithSearchbar","contextTypes","initialState","type","Date","now","filter"],"mappings":"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"}